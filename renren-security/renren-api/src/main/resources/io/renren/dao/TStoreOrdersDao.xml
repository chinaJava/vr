<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.TStoreOrdersDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.TStoreOrdersEntity" id="tStoreOrdersMap">
        <result property="id" column="ID"/>
        <result property="appuserId" column="APPUSER_ID"/>
        <result property="productId" column="PRODUCT_ID"/>
        <result property="createtime" column="CREATETIME"/>
        <result property="addressId" column="ADDRESS_ID"/>
        <result property="status" column="STATUS"/>
        <result property="productAmount" column="PRODUCT_AMOUNT"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.TStoreOrdersEntity">
		select * from t_store_orders where ID = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.TStoreOrdersEntity">
		select ts.* ,ta.MOBILE as userMobile,tg.NAME as productName,td.TELEPHONE as contactPhone,
		       td.ADDRESS as addressDetail,td.CONSIGER as contactPerson
		from t_store_orders ts
		left join t_appuser ta on ta.ID = ts.APPUSER_ID
		left join t_game_store tg on tg.ID = ts.PRODUCT_ID
		left join t_appuser_address td on td.ID = ts.ADDRESS_ID
		<where>
			<if test="mobile != null and mobile.trim() != ''">
				and ta.MOBILE = #{mobile}
			</if>
			<if test="productName != null and productName.trim() != ''">
				and tg.NAME like concat(concat('%',#{productName}),'%')
			</if>
			<if test="status != null and status.trim() != ''">
				and ts.STATUS = #{status}
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_store_orders 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.TStoreOrdersEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_store_orders
		(
			`APPUSER_ID`, 
			`PRODUCT_ID`, 
			`CREATETIME`, 
			`ADDRESS_ID`, 
			`STATUS`, 
			`PRODUCT_AMOUNT`
		)
		values
		(
			#{appuserId}, 
			#{productId}, 
			#{createtime}, 
			#{addressId}, 
			#{status}, 
			#{productAmount}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.TStoreOrdersEntity">
		update t_store_orders 
		<set>
			<if test="appuserId != null">`APPUSER_ID` = #{appuserId}, </if>
			<if test="productId != null">`PRODUCT_ID` = #{productId}, </if>
			<if test="createtime != null">`CREATETIME` = #{createtime}, </if>
			<if test="addressId != null">`ADDRESS_ID` = #{addressId}, </if>
			<if test="status != null">`STATUS` = #{status}, </if>
			<if test="productAmount != null">`PRODUCT_AMOUNT` = #{productAmount}</if>
		</set>
		where ID = #{id}
	</update>
	
	<!-- 批量更新已发货状态 -->
	<update id="updateBatch">
		update t_store_orders set STATUS = '1' where ID in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	
	<delete id="delete">
		delete from t_store_orders where ID = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_store_orders where ID in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>