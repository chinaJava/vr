<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.TStoreProducttypeDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.TStoreProducttypeEntity" id="tStoreProducttypeMap">
        <result property="id" column="ID"/>
        <result property="name" column="NAME"/>
        <result property="proType" column="PRO_TYPE"/>
        <result property="creator" column="CREATOR"/>
        <result property="status" column="STATUS"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.TStoreProducttypeEntity">
		select * from t_store_producttype where ID = #{value}
	</select>
	<select id="queryAllObject" resultType="io.renren.entity.TStoreProducttypeEntity">
		select * from t_store_producttype
	</select>
	<select id="queryList" resultType="io.renren.entity.TStoreProducttypeEntity">
		select * from t_store_producttype
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_store_producttype 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.TStoreProducttypeEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_store_producttype
		(
			`NAME`, 
			`PRO_TYPE`,
			`CREATOR`, 
			`STATUS`
		)
		values
		(
			#{name}, 
			#{proType},
			#{creator}, 
			#{status}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.TStoreProducttypeEntity">
		update t_store_producttype 
		<set>
			<if test="name != null">`NAME` = #{name}, </if>
			<if test="proType != null">`PRO_TYPE` = #{proType},</if>
			<if test="status != null">`STATUS` = #{status}</if>
		</set>
		where ID = #{id}
	</update>
	
	<delete id="delete">
		delete from t_store_producttype where ID = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_store_producttype where ID in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>